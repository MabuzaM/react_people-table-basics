{"version":3,"sources":["components/PersonRow/PersonRow.tsx","components/PeopleTable/PeopleTable.tsx","components/Header/Header.tsx","api.tsx","App.tsx","index.tsx"],"names":["PersonRow","memo","person","className","name","sex","born","died","fatherName","motherName","PeopleTable","people","map","Header","to","getPeople","a","fetch","response","json","results","App","useState","setPeople","useEffect","loadPeople","loadedPeople","then","peopleData","path","element","ReactDOM","render","document","getElementById"],"mappings":"iWAOaA,EAAgCC,gBAC3C,YAAiB,IAAdC,EAAa,EAAbA,OACD,OACE,qBAAIC,UAAU,YAAd,UACE,oBAAIA,UAAU,kBAAd,SAAiCD,EAAOE,OACxC,oBAAID,UAAU,kBAAd,SAAiCD,EAAOG,MACxC,oBAAIF,UAAU,kBAAd,SAAiCD,EAAOI,OACxC,oBAAIH,UAAU,kBAAd,SAAiCD,EAAOK,OACxC,oBAAIJ,UAAU,kBAAd,SAAiCD,EAAOM,aACxC,oBAAIL,UAAU,kBAAd,SAAiCD,EAAOO,mBCRnCC,G,MAAoCT,gBAC/C,YAAiB,IAAdU,EAAa,EAAbA,OACD,OACE,wBAAOR,UAAU,cAAjB,UACE,kCACE,oBAAIA,UAAU,kBAAd,kBACA,oBAAIA,UAAU,kBAAd,iBACA,oBAAIA,UAAU,kBAAd,kBACA,oBAAIA,UAAU,kBAAd,kBACA,oBAAIA,UAAU,kBAAd,wBACA,oBAAIA,UAAU,kBAAd,2BAEF,gCAEIQ,EAAOC,KAAI,SAAAV,GAAM,OACf,cAAC,EAAD,CAAWA,OAAQA,GAAaA,EAAOE,kBCnBxCS,G,MAAa,WACxB,OACE,wBAAQV,UAAU,SAAlB,SACE,sBAAKA,UAAU,kBAAf,UACE,cAAC,IAAD,CAASW,GAAG,IAAIX,UAAU,YAA1B,kBAIA,cAAC,IAAD,CAASW,GAAG,UAAUX,UAAU,YAAhC,2BCZKY,EAAS,uCAAG,8BAAAC,EAAA,sEACAC,MACrB,qEAFqB,cACjBC,EADiB,gBAKSA,EAASC,OALlB,cAKjBC,EALiB,yBAOhBA,GAPgB,2CAAH,qDCYhBC,EAAUpB,gBACd,WACE,MAA4BqB,mBAAmB,IAA/C,mBAAOX,EAAP,KAAeY,EAAf,KAcA,OAZAC,qBACE,WACE,IAAMC,EAAU,uCAAG,4BAAAT,EAAA,6DACXU,EAAeX,IAAYY,MAAK,SAAAC,GAAU,OAAIA,KADnC,KAGjBL,EAHiB,SAGDG,EAHC,6EAAH,qDAMhBD,MACC,IAIH,sBAAKtB,UAAU,MAAf,UACE,cAAC,EAAD,IAEA,sBAAMA,UAAU,YAAhB,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CACE0B,KAAK,IACLC,QACE,mCACE,+CAKN,cAAC,IAAD,CACED,KAAK,UACLC,QACE,qCACE,6CACA,qBAAK3B,UAAU,aAAf,SACE,cAAC,EAAD,CAAaQ,OAAQA,WAM7B,cAAC,IAAD,CACEkB,KAAK,QACLC,QAAS,cAAC,IAAD,CAAUhB,GAAG,QAGxB,cAAC,IAAD,CACEe,KAAK,IACLC,QACE,mCACE,+DAWHT,ICrEfU,IAASC,OACP,cAAC,IAAD,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.3cf3f09e.chunk.js","sourcesContent":["import { FC, memo } from 'react';\nimport './PersonRow.scss';\n\ninterface PersonRowProps {\n  person: Person;\n}\n\nexport const PersonRow: FC<PersonRowProps> = memo(\n  ({ person }) => {\n    return (\n      <tr className=\"PersonRow\">\n        <td className=\"PersonRow__data\">{person.name}</td>\n        <td className=\"PersonRow__data\">{person.sex}</td>\n        <td className=\"PersonRow__data\">{person.born}</td>\n        <td className=\"PersonRow__data\">{person.died}</td>\n        <td className=\"PersonRow__data\">{person.fatherName}</td>\n        <td className=\"PersonRow__data\">{person.motherName}</td>\n      </tr>\n    );\n  },\n);\n","import { FC, memo } from 'react';\nimport { PersonRow } from '../PersonRow/PersonRow';\nimport './PeopleTable.scss';\n\ninterface PeopleTableProps {\n  people: Person[]\n}\n\nexport const PeopleTable: FC<PeopleTableProps> = memo(\n  ({ people }) => {\n    return (\n      <table className=\"PeopleTable\">\n        <thead>\n          <th className=\"PersonRow__data\">Name</th>\n          <th className=\"PersonRow__data\">Sex</th>\n          <th className=\"PersonRow__data\">Born</th>\n          <th className=\"PersonRow__data\">Died</th>\n          <th className=\"PersonRow__data\">FatherName</th>\n          <th className=\"PersonRow__data\">MotherName</th>\n        </thead>\n        <tbody>\n          {\n            people.map(person => (\n              <PersonRow person={person} key={person.name} />\n            ))\n          }\n        </tbody>\n      </table>\n    );\n  },\n);\n","import { FC } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport './Header.scss';\n\nexport const Header: FC = () => {\n  return (\n    <header className=\"Header\">\n      <nav className=\"Nav Header__nav\">\n        <NavLink to=\"/\" className=\"Nav__link\">\n          Home\n        </NavLink>\n\n        <NavLink to=\"/people\" className=\"Nav__link\">\n          People\n        </NavLink>\n      </nav>\n    </header>\n  );\n};\n","export const getPeople = async () => {\n  const response = await fetch(\n    'https://mate-academy.github.io/react_people-table/api/people.json',\n  );\n\n  const results: Person[] = await response.json();\n\n  return results;\n};\n","import {\n  useState,\n  FC,\n  memo,\n  useEffect,\n} from 'react';\nimport { Route, Routes, Navigate } from 'react-router-dom';\nimport './App.scss';\nimport { PeopleTable } from './components/PeopleTable/PeopleTable';\nimport { Header } from './components/Header/Header';\nimport { getPeople } from './api';\n\nconst App: FC = memo(\n  () => {\n    const [people, setPeople] = useState<Person[]>([]);\n\n    useEffect(\n      () => {\n        const loadPeople = async () => {\n          const loadedPeople = getPeople().then(peopleData => peopleData);\n\n          setPeople(await loadedPeople);\n        };\n\n        loadPeople();\n      }, [],\n    );\n\n    return (\n      <div className=\"App\">\n        <Header />\n\n        <main className=\"App__main\">\n          <Routes>\n            <Route\n              path=\"/\"\n              element={(\n                <>\n                  <h1>Home Page</h1>\n                </>\n              )}\n            />\n\n            <Route\n              path=\"/people\"\n              element={(\n                <>\n                  <h1>People page</h1>\n                  <div className=\"App__table\">\n                    <PeopleTable people={people} />\n                  </div>\n                </>\n              )}\n            />\n\n            <Route\n              path=\"/home\"\n              element={<Navigate to=\"/\" />}\n            />\n\n            <Route\n              path=\"*\"\n              element={(\n                <>\n                  <h1>Page Not Found</h1>\n                </>\n              )}\n            />\n          </Routes>\n        </main>\n      </div>\n    );\n  },\n);\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\nimport './index.scss';\n\nimport App from './App';\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}